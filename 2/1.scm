(define (make-rat n d)
  (let* ((g (gcd n d))
	 (n (/ n g))
	 (d (/ d g)))
    (if (or (and (> n 0) (> d 0))
	    (and (< n 0) (< d 0)))
	(cons (abs n) (abs d))
	(cons (- (abs n)) (abs d)))))
