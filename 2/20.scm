(define (same-parity first . rest)
  (define (same? v)
    (= (remainder first 2) (remainder v 2)))
  (define (iter l r)
    (if (null? l)
	(reverse r)
	(iter (cdr l) (if (same? (car l))
			  (cons (car l) r)
			  r))))
  (cons first (iter rest '())))
